# METABEGIN
# X-Env-Layer-Name: image-base
# X-Env-Layer-Category: image
# X-Env-Layer-Desc: Default image settings and build attributes.
# X-Env-Layer-Version: 1.1.0
# X-Env-Layer-Requires: sys-build-base,sbom-base,target-config,artefact-base,deploy-base
# X-Env-Layer-RequiresProvider: device
#
# X-Env-VarRequires: IGconf_sys_workroot,IGconf_artefact_version
# X-Env-VarRequires-Valid: string,string
#
# X-Env-VarPrefix: image
#
# X-Env-Var-suffix: img
# X-Env-Var-suffix-Desc: The base suffix of generated raw image(s)
# X-Env-Var-suffix-Required: n
# X-Env-Var-suffix-Valid: string
# X-Env-Var-suffix-Set: y
#
# X-Env-Var-compression: none
# X-Env-Var-compression-Desc: Identifier for the compression scheme used when
#  deploying image assets.
# X-Env-Var-compression-Required: n
# X-Env-Var-compression-Valid: none,zstd
# X-Env-Var-compression-Set: y
#
# X-Env-Var-version: ${IGconf_artefact_version}
# X-Env-Var-version-Desc: Version string of generated images. This always maps
#  to the artefact version.
# X-Env-Var-version-Required: n
# X-Env-Var-version-Valid: string
# X-Env-Var-version-Set: force
#
# X-Env-Var-name: rpi-${IGconf_image_version}
# X-Env-Var-name-Desc: The base name for all generated images
# X-Env-Var-name-Required: n
# X-Env-Var-name-Valid: string
# X-Env-Var-name-Set: y
#
# X-Env-Var-pmap:
# X-Env-Var-pmap-Desc: Set the identifier string for the image Provisioning
#  Map (PMAP). The PMAP file defines how the image will be provisioned on the
#  device for which it's intended. The PMAP is part of the Image Description
#  JSON file generated by the build. Providing a PMAP is optional, but is
#  mandatory for provisioning the image using Raspberry Pi tools.
# X-Env-Var-pmap-Required: n
# X-Env-Var-pmap-Valid: string-or-empty
# X-Env-Var-pmap-Set: lazy
#
# X-Env-Var-pmap_schema: ${DIRECTORY}/schemas/provisionmap/v1/schema.json
# X-Env-Var-pmap_schema-Desc: Image Description PMAP schema for validation
# X-Env-Var-pmap_schema-Required: n
# X-Env-Var-pmap_schema-Valid: string
# X-Env-Var-pmap_schema-Set: lazy
#
# X-Env-Var-outputdir: ${IGconf_sys_workroot}/image-${IGconf_image_name}
# X-Env-Var-outputdir-Desc: Location of all image build artefacts.
# X-Env-Var-outputdir-Required: n
# X-Env-Var-outputdir-Valid: string
# X-Env-Var-outputdir-Set: y
#
# X-Env-Var-provider: genimage
# X-Env-Var-provider-Desc: Image generation provider
# X-Env-Var-provider-Required: n
# X-Env-Var-provider-Valid: keywords:genimage
# X-Env-Var-provider-Set: lazy
#
# X-Env-Var-assetdir: /dev/null
# X-Env-Var-assetdir-Desc: Image specific asset location. Use this directory
#  to hold image provider templates, geometry configuration, overlays, etc
#  particular to the image layout.
# X-Env-Var-assetdir-Required: n
# X-Env-Var-assetdir-Valid: string
# X-Env-Var-assetdir-Set: lazy
#
# X-Env-Var-pmapfile: ${IGconf_image_pmap:+${IGconf_image_assetdir}/device/provisionmap-${IGconf_image_pmap}.json}
# X-Env-Var-pmapfile-Desc: Full path to the Provisioning Map file. When
#  IGconf_image_pmap is specified, this provides the complete path to the pmap
#  file. If no pmap identifier is set, this variable remains empty.
# X-Env-Var-pmapfile-Required: n
# X-Env-Var-pmapfile-Valid: string-or-empty
# X-Env-Var-pmapfile-Set: lazy
#
# X-Env-Var-prebuild: ${IGconf_image_assetdir}/pre-build.sh
# X-Env-Var-prebuild-Desc: Pre-build hook. If found and executable, this script
#  will be executed from its parent directory before the filesystem build
#  commences.
#  Example use: Image specific pre-build validation
# X-Env-Var-prebuild-Required: n
# X-Env-Var-prebuild-Valid: string
# X-Env-Var-prebuild-Set: lazy
#
# X-Env-Var-postbuild: ${IGconf_image_assetdir}/post-build.sh
# X-Env-Var-postbuild-Desc: Post-build hook. If found and executable, this script
#  will be executed from its parent directory after the filesystem build has
#  completed.
#  Example use: Installation of image specific assets
# X-Env-Var-postbuild-Required: n
# X-Env-Var-postbuild-Valid: string
# X-Env-Var-postbuild-Set: lazy
#
# X-Env-Var-preimage: ${IGconf_image_assetdir}/pre-image.sh
# X-Env-Var-preimage-Desc: Pre-image hook. If found and executable, this script
#  will executed from its parent directory before image creation commences.
#  Example use: Creation of genimage templates
# X-Env-Var-preimage-Required: n
# X-Env-Var-preimage-Valid: string
# X-Env-Var-preimage-Set: lazy
#
# X-Env-Var-postimage: ${IGconf_image_assetdir}/post-image.sh
# X-Env-Var-postimage-Desc: Post-image hook. If found and executable, this script
#  will be executed from its parent directory after image creation has
#  completed.
# X-Env-Var-postimage-Required: n
# X-Env-Var-postimage-Valid: string
# X-Env-Var-postimage-Set: lazy
#
# METAEND
---
